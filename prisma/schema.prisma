// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id           Int     @id @default(autoincrement())
  profileImage String?
  firstname    String
  lastname     String
  username     String  @unique
  role         Role    @default(MEMBRO)
  posts        Post[]
  password     String
  refreshToken String?
}

model Post {
  id         Int          @id @default(autoincrement())
  category   PostCategory @default(BLOG)
  author     User         @relation(fields: [authorId], references: [id])
  authorId   Int
  title      String
  text       String
  image      String
  references String[]
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
}


model Curriculum {
  id            Int            @id @default(autoincrement())
  firstName     String
  lastName      String
  credential    String
  profileImage  String
  academicInfo  AcademicInfo?  @relation(fields: [academicInfoId], references: [id])
  academicInfoId Int?          @unique
  teachingInfo  TeachingInfo?  @relation(fields: [teachingInfoId], references: [id])
  teachingInfoId Int?          @unique
  extras        Json
  singleton     Boolean        @default(true) @unique
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
}

model AcademicInfo {
  id          Int      @id @default(autoincrement())
  title       String
  items       String[]   // array de strings com cursos/formações
  curriculum  Curriculum?
}

model TeachingInfo {
  id          Int      @id @default(autoincrement())
  title       String
  items       String[]   // array de strings com disciplinas/cursos
  curriculum  Curriculum?
}

model InboxMessage {
  id        Int      @id @default(autoincrement())
  name      String
  email     String
  subject   String?
  message   String
  read      Boolean  @default(false)
  createdAt DateTime @default(now())
}

enum PostCategory {
  BLOG
  ARTIGO
}

enum Role {
  MEMBRO
  EDITOR
  CHEFE
}
